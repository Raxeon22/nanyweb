{"version":3,"sources":["pages/Cart/AddToCart.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["HeadPhones","SelfieStick","Speakers","AddToCart","useState","data","setdata","Quantity","setQuantity","color","netamount","useEffect","a","JSON","parse","localStorage","getItem","shop","Homelink","className","lg","md","length","map","value","index","price","quantity","xs","onClick","splice","setItem","stringify","getcart","src","baseURL","image","alt","name","qua","console","log","Select","id","item","onSelect","to","pathname","state","product","total","variant","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/15.d5b81fc2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container, Button, Form } from \"react-bootstrap\";\r\nimport Navbar from \"../../components/Navbar\";\r\nimport HeadPhones from \"../../assets/headphones.jpg\";\r\nimport SelfieStick from \"../../assets/selfie-stick.jpg\";\r\nimport Speakers from \"../../assets/speakers.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport baseURL from \"../../middleware/BaseURL\";\r\nimport { AiOutlineMinus, AiOutlinePlus } from \"react-icons/ai\";\r\n\r\n\r\nconst cartDetails = [\r\n  {\r\n    image: HeadPhones,\r\n    description:\r\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam, possimus.\",\r\n    price: \"$60\",\r\n    quantity: \"2\",\r\n    total: \"$120\",\r\n  },\r\n  {\r\n    image: SelfieStick,\r\n    description:\r\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam, possimus.\",\r\n    price: \"$60\",\r\n    quantity: \"1\",\r\n    total: \"$60\",\r\n  },\r\n  {\r\n    image: Speakers,\r\n    description:\r\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam, possimus.\",\r\n    price: \"$80\",\r\n    quantity: \"3\",\r\n    total: \"$320\",\r\n  },\r\n];\r\nconst AddToCart = () => {\r\n  const [total, settotal] = useState([]);\r\n  const [data, setdata] = useState([]);\r\n  const [Quantity, setQuantity] = useState([]);\r\n  const [payload, setpayload] = useState(data);\r\n  let color = [];\r\n  let netamount = 0\r\n\r\n  useEffect(async () => {\r\n    setdata(await JSON.parse(localStorage.getItem(\"order\")));\r\n\r\n  }, []);\r\n\r\n\r\n  const getcart = (value, index) => {\r\n    value.splice(index, 1);\r\n\r\n    localStorage.setItem(\"order\", JSON.stringify(value));\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navbar shop={ true } Homelink=\"home\" />\r\n\r\n      <Container>\r\n        <div className=\"shopping-cart\">\r\n          <h1>shopping cart</h1>\r\n          <div className=\"d-none d-md-block\">\r\n            <Row className=\"items-heading \">\r\n              <Col lg=\"8\" md=\"8\">\r\n                <p>Products</p>\r\n              </Col>\r\n              <Col lg=\"1\" md=\"1\">\r\n                <p>Price</p>\r\n              </Col>\r\n              <Col lg=\"1\" md=\"1\">\r\n                <p>Quantity</p>\r\n              </Col>\r\n              <Col lg=\"1\" md=\"1\">\r\n                <p>Color</p>\r\n              </Col>\r\n              <Col lg=\"1\" md=\"1\">\r\n                <p>Total</p>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <hr />\r\n\r\n          { data.length > 0 ? (data.map((value, index) => {\r\n\r\n\r\n            netamount += (value.price * value.quantity)\r\n\r\n            return (\r\n              <>\r\n                <Row className=\"each-item\">\r\n                  <Col lg=\"1\" md=\"1\" xs=\"12\" className=\"mt-4\">\r\n                    <span\r\n                      onClick={ () => {\r\n                        getcart(data, index);\r\n                      } }\r\n                    >\r\n                      &times;\r\n                    </span>\r\n                  </Col>\r\n                  <Col lg=\"2\" md=\"2\" xs=\"6\">\r\n                    <img src={ baseURL + value.image } alt=\"\" />\r\n                  </Col>\r\n                  <Col lg=\"5\" md=\"5\" xs=\"5\">\r\n                    { \" \" }\r\n                    <p>{ value.name }</p>{ \" \" }\r\n                  </Col>\r\n                  <Col lg=\"1\" md=\"1\" xs=\"4\">\r\n                    { \" \" }\r\n                    <p>{ value.price }</p>\r\n                  </Col>\r\n                  <Col lg=\"1\" md=\"1\" xs=\"4\">\r\n                    <div className=\"quantity d-flex\">\r\n                      <span\r\n                        onClick={ () => {\r\n                          const qua = [...Quantity];\r\n                          qua[index] = (qua[index] ? qua[index] : 1) + 1;\r\n                          console.log(qua[index]);\r\n\r\n                          setQuantity(qua)\r\n                        } }\r\n                      >\r\n                        { \" \" }\r\n                        <AiOutlinePlus />{ \" \" }\r\n                      </span>\r\n                      <p className=\"p-2\">\r\n                        { \" \" }\r\n                        { Quantity[index] > 0 ? Quantity[index] : 1 }{ \" \" }\r\n                      </p>\r\n                      <span\r\n                        onClick={ () => {\r\n                          const qua = [...Quantity];\r\n\r\n                          qua[index] = (qua[index] ? qua[index] : 1) - 1;\r\n                          console.log(qua[index]);\r\n                          setQuantity(qua)\r\n\r\n                        } }\r\n                      >\r\n                        <AiOutlineMinus />{ \" \" }\r\n                      </span>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg=\"1\" md=\"1\" xs=\"4\">\r\n                    <>\r\n\r\n                      <div>\r\n\r\n                        <Form.Select className='mt-3' name=\"cars\" id=\"cars\">\r\n                          { value.color.map((item) => {\r\n\r\n                            return <option onSelect={ color[index] = item }> { item }</option>\r\n\r\n                          }) }\r\n\r\n                        </Form.Select>\r\n                      </div>\r\n                    </>\r\n                  </Col>\r\n                  <Col lg=\"1\" md=\"1\" xs=\"4\">\r\n                    { \" \" }\r\n                    <p>{ Quantity[index] ? value.price * Quantity[index] : value.price }</p>{ \" \" }\r\n                  </Col>\r\n                </Row>\r\n                <hr />\r\n              </>\r\n            );\r\n          })) : ((\r\n\r\n            <center>\r\n\r\n              <h2>No item in cart</h2>\r\n            </center>\r\n          )) }\r\n          <Row className=\"justify-content-end text-center subtotal\">\r\n            <Col lg=\"3\">\r\n              <h4>\r\n                Subtotal: ${ \" \" }\r\n                {\r\n                  netamount\r\n                }\r\n              </h4>\r\n              <Link\r\n                onClick={ () => {\r\n                  data.map((item, index) => {\r\n\r\n                    data[index].quantity =\r\n                      Quantity[index] > 0 ? Quantity[index] : 1;\r\n\r\n                    data[index].color = color[index] ? color[index] : data[index].color[0]\r\n\r\n                  });\r\n\r\n                } }\r\n                to={ { pathname: \"/order/step1\", state: { product: data, total: netamount } } }\r\n              >\r\n                <Button variant=\"dark\" className=\"w-100\">\r\n                  CHECK OUT\r\n                </Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default AddToCart;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}