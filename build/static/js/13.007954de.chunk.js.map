{"version":3,"sources":["components/Order/Step2.jsx"],"names":["Step2","props","useState","address","city","country","postalCode","order","setorder","className","class","Group","Label","Control","type","value","onChange","e","target","placeholder","to","pathname","state","Object","assign","location"],"mappings":"2KAsGeA,UAjGD,SAACC,GACb,MAA8BC,mBAAS,IAAvC,mBAEA,GAFA,UAE0BA,mBAAS,CACjCC,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,WAAY,MAJd,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OACE,qCACE,cAAC,IAAD,IACA,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,sBAAKC,MAAM,kBAAX,UACE,sBAAKA,MAAM,0BAAX,UACE,qBAAKA,MAAM,eAAX,eACA,qBAAKA,MAAM,YAAX,wBAEF,sBAAKA,MAAM,gCAAX,UACE,qBAAKA,MAAM,eAAX,eACA,qBAAKA,MAAM,YAAX,uBAEF,sBAAKA,MAAM,gBAAX,UACE,qBAAKA,MAAM,eAAX,eACA,qBAAKA,MAAM,YAAX,0BAGJ,eAAC,IAAD,WACE,eAAC,IAAKC,MAAN,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAKG,MAAN,sBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,MAAOR,EAAMJ,QACba,SAAU,SAACC,GACTT,EAAS,2BAAKD,GAAN,IAAaJ,QAASc,EAAEC,OAAOH,UAEzCI,YAAY,YAGhB,eAAC,IAAKR,MAAN,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAKG,MAAN,mBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,MAAOR,EAAMH,KACbY,SAAU,SAACC,GACTT,EAAS,2BAAKD,GAAN,IAAaH,KAAMa,EAAEC,OAAOH,UAEtCI,YAAY,YAGhB,eAAC,IAAKR,MAAN,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAKG,MAAN,sBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,MAAOR,EAAMF,QACbW,SAAU,SAACC,GACTT,EAAS,2BAAKD,GAAN,IAAaF,QAASY,EAAEC,OAAOH,UAEzCI,YAAY,eAGhB,eAAC,IAAKR,MAAN,CAAYF,UAAU,OAAtB,UACE,cAAC,IAAKG,MAAN,0BACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,MAAOR,EAAMD,WACbU,SAAU,SAACC,GACTT,EAAS,2BAAKD,GAAN,IAAaD,WAAYW,EAAEC,OAAOH,UAE5CI,YAAY,kBAIlB,cAAC,IAAD,CAAMC,GAAG,eAAT,SACE,cAAC,IAAD,yBAEF,cAAC,IAAD,CACEA,GAAI,CACFC,SAAU,eACVC,MAAM,eAAMC,OAAOC,OAAOvB,EAAMwB,SAASH,MAAMf,MAAOA,KAH1D,SAYE,cAAC,IAAD,CAAQE,UAAU,YAAlB","file":"static/js/13.007954de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../Navbar\";\r\n\r\nconst Step2 = (props) => {\r\n  const [product, setproduct] = useState([]);\r\n\r\n  const [order, setorder] = useState({\r\n    address: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    postalCode: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"order-now\">\r\n        <div className=\"forms\">\r\n          <div class=\"stepper-wrapper\">\r\n            <div class=\"stepper-item completed \">\r\n              <div class=\"step-counter\">1</div>\r\n              <div class=\"step-name\">step 1 </div>\r\n            </div>\r\n            <div class=\"stepper-item completed active\">\r\n              <div class=\"step-counter\">2</div>\r\n              <div class=\"step-name\">step 2</div>\r\n            </div>\r\n            <div class=\"stepper-item \">\r\n              <div class=\"step-counter\">3</div>\r\n              <div class=\"step-name\">step 3</div>\r\n            </div>\r\n          </div>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={order.address}\r\n                onChange={(e) => {\r\n                  setorder({ ...order, address: e.target.value });\r\n                }}\r\n                placeholder=\"Wash\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={order.city}\r\n                onChange={(e) => {\r\n                  setorder({ ...order, city: e.target.value });\r\n                }}\r\n                placeholder=\"City\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={order.country}\r\n                onChange={(e) => {\r\n                  setorder({ ...order, country: e.target.value });\r\n                }}\r\n                placeholder=\"Country\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>postal Code</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={order.postalCode}\r\n                onChange={(e) => {\r\n                  setorder({ ...order, postalCode: e.target.value });\r\n                }}\r\n                placeholder=\"Country\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <Link to=\"/order/step1\">\r\n            <Button>previous</Button>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/order/step3\",\r\n              state: { ...Object.assign(props.location.state.order, order) },\r\n            }}\r\n            // onClick={() => {\r\n            //   localStorage.setItem(\r\n            //     \"data\",\r\n            //     Object.assign(JSON.parse(localStorage.getItem(\"data\")), order)\r\n            //   );\r\n            // }}\r\n          >\r\n            <Button className=\"float-end\">next</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Step2;\r\n"],"sourceRoot":""}